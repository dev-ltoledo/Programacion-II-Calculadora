package calculadora;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import java.net.URL;

import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ltoledo
 */
public class Calculadora extends javax.swing.JFrame {

    // declaramos valores globales para utilizarlo en los demas modulos
    private boolean limpiarOperacion = false;
    private boolean escrituraTeclado = false;
    
    private String operacion = "";
    private String operacionAritmetica = "";
    
    private float primerValor = 0;
    private float segundoValor = 0;
    private float ultimoValor = 0;
    
    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HistoricoFrame = new javax.swing.JFrame();
        PanelHistorial = new javax.swing.JPanel();
        ScrollHistorial = new javax.swing.JScrollPane();
        Bitacora = new javax.swing.JTextArea();
        jMenuItem1 = new javax.swing.JMenuItem();
        pantallaValores = new javax.swing.JTextField();
        pantallaOperacion = new javax.swing.JLabel();
        panelTeclado = new javax.swing.JPanel();
        ButtonDeleteAll = new javax.swing.JButton();
        ButtonNumber1 = new javax.swing.JButton();
        ButtonNumber2 = new javax.swing.JButton();
        ButtonNumber3 = new javax.swing.JButton();
        ButtonNumber4 = new javax.swing.JButton();
        ButtonNumber5 = new javax.swing.JButton();
        ButtonNumber6 = new javax.swing.JButton();
        ButtonNumber7 = new javax.swing.JButton();
        ButtonNumber8 = new javax.swing.JButton();
        ButtonNumber9 = new javax.swing.JButton();
        ButtonNumber0 = new javax.swing.JButton();
        ButtonDivision = new javax.swing.JButton();
        ButtonLess = new javax.swing.JButton();
        ButtonMore = new javax.swing.JButton();
        ButtonIgual = new javax.swing.JButton();
        ButtonPoint = new javax.swing.JButton();
        ButtonMultiplication = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Menu = new javax.swing.JMenuBar();
        Opciones = new javax.swing.JMenu();
        NuevoItemMenu = new javax.swing.JMenuItem();
        HistorialItemMenu = new javax.swing.JMenuItem();
        AyudaItemMenu = new javax.swing.JMenu();
        ManualItemMenu = new javax.swing.JMenuItem();

        HistoricoFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        HistoricoFrame.setTitle("Historico");
        HistoricoFrame.setAutoRequestFocus(false);
        HistoricoFrame.setPreferredSize(new java.awt.Dimension(310, 518));
        HistoricoFrame.setResizable(false);

        Bitacora.setBackground(new java.awt.Color(242, 242, 242));
        Bitacora.setColumns(20);
        Bitacora.setRows(5);
        Bitacora.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ScrollHistorial.setViewportView(Bitacora);

        javax.swing.GroupLayout PanelHistorialLayout = new javax.swing.GroupLayout(PanelHistorial);
        PanelHistorial.setLayout(PanelHistorialLayout);
        PanelHistorialLayout.setHorizontalGroup(
            PanelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ScrollHistorial, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
        );
        PanelHistorialLayout.setVerticalGroup(
            PanelHistorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelHistorialLayout.createSequentialGroup()
                .addComponent(ScrollHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout HistoricoFrameLayout = new javax.swing.GroupLayout(HistoricoFrame.getContentPane());
        HistoricoFrame.getContentPane().setLayout(HistoricoFrameLayout);
        HistoricoFrameLayout.setHorizontalGroup(
            HistoricoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoricoFrameLayout.createSequentialGroup()
                .addComponent(PanelHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        HistoricoFrameLayout.setVerticalGroup(
            HistoricoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoricoFrameLayout.createSequentialGroup()
                .addComponent(PanelHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(28, 33, 37));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pantallaValores.setBackground(new java.awt.Color(238, 238, 238));
        pantallaValores.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        pantallaValores.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pantallaValores.setToolTipText("0");
        pantallaValores.setBorder(null);
        pantallaValores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pantallaValoresActionPerformed(evt);
            }
        });
        pantallaValores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pantallaValoresKeyTyped(evt);
            }
        });

        pantallaOperacion.setBackground(new java.awt.Color(0, 0, 0));
        pantallaOperacion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pantallaOperacion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        panelTeclado.setBackground(new java.awt.Color(238, 238, 238));
        panelTeclado.setForeground(new java.awt.Color(255, 51, 255));

        ButtonDeleteAll.setBackground(java.awt.SystemColor.activeCaption);
        ButtonDeleteAll.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonDeleteAll.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDeleteAll.setText("C");
        ButtonDeleteAll.setBorderPainted(false);
        ButtonDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteAllActionPerformed(evt);
            }
        });

        ButtonNumber1.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber1.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber1.setText("1");
        ButtonNumber1.setBorderPainted(false);
        ButtonNumber1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber1ActionPerformed(evt);
            }
        });

        ButtonNumber2.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber2.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber2.setText("2");
        ButtonNumber2.setBorderPainted(false);
        ButtonNumber2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber2ActionPerformed(evt);
            }
        });

        ButtonNumber3.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber3.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber3.setText("3");
        ButtonNumber3.setBorderPainted(false);
        ButtonNumber3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber3ActionPerformed(evt);
            }
        });

        ButtonNumber4.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber4.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber4.setText("4");
        ButtonNumber4.setBorderPainted(false);
        ButtonNumber4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber4ActionPerformed(evt);
            }
        });

        ButtonNumber5.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber5.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber5.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber5.setText("5");
        ButtonNumber5.setBorderPainted(false);
        ButtonNumber5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber5ActionPerformed(evt);
            }
        });

        ButtonNumber6.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber6.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber6.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber6.setText("6");
        ButtonNumber6.setBorderPainted(false);
        ButtonNumber6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber6ActionPerformed(evt);
            }
        });

        ButtonNumber7.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber7.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber7.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber7.setText("7");
        ButtonNumber7.setBorderPainted(false);
        ButtonNumber7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber7ActionPerformed(evt);
            }
        });

        ButtonNumber8.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber8.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber8.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber8.setText("8");
        ButtonNumber8.setBorderPainted(false);
        ButtonNumber8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber8ActionPerformed(evt);
            }
        });

        ButtonNumber9.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber9.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber9.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber9.setText("9");
        ButtonNumber9.setBorderPainted(false);
        ButtonNumber9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber9ActionPerformed(evt);
            }
        });

        ButtonNumber0.setBackground(java.awt.SystemColor.activeCaption);
        ButtonNumber0.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonNumber0.setForeground(new java.awt.Color(255, 255, 255));
        ButtonNumber0.setText("0");
        ButtonNumber0.setBorderPainted(false);
        ButtonNumber0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNumber0ActionPerformed(evt);
            }
        });

        ButtonDivision.setBackground(java.awt.SystemColor.activeCaption);
        ButtonDivision.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonDivision.setForeground(new java.awt.Color(255, 255, 255));
        ButtonDivision.setText("÷");
        ButtonDivision.setBorderPainted(false);
        ButtonDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDivisionActionPerformed(evt);
            }
        });

        ButtonLess.setBackground(java.awt.SystemColor.activeCaption);
        ButtonLess.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonLess.setForeground(new java.awt.Color(255, 255, 255));
        ButtonLess.setText("-");
        ButtonLess.setBorderPainted(false);
        ButtonLess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLessActionPerformed(evt);
            }
        });

        ButtonMore.setBackground(java.awt.SystemColor.activeCaption);
        ButtonMore.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonMore.setForeground(new java.awt.Color(255, 255, 255));
        ButtonMore.setText("+");
        ButtonMore.setBorderPainted(false);
        ButtonMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMoreActionPerformed(evt);
            }
        });

        ButtonIgual.setBackground(java.awt.SystemColor.activeCaption);
        ButtonIgual.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonIgual.setForeground(new java.awt.Color(255, 255, 255));
        ButtonIgual.setText("=");
        ButtonIgual.setBorderPainted(false);
        ButtonIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonIgualActionPerformed(evt);
            }
        });

        ButtonPoint.setBackground(java.awt.SystemColor.activeCaption);
        ButtonPoint.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonPoint.setForeground(new java.awt.Color(255, 255, 255));
        ButtonPoint.setText(".");
        ButtonPoint.setBorderPainted(false);
        ButtonPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPointActionPerformed(evt);
            }
        });

        ButtonMultiplication.setBackground(java.awt.SystemColor.activeCaption);
        ButtonMultiplication.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        ButtonMultiplication.setForeground(new java.awt.Color(255, 255, 255));
        ButtonMultiplication.setText("x");
        ButtonMultiplication.setBorderPainted(false);
        ButtonMultiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMultiplicationActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Versión: 1.0.0.2408 | Copyright (c) | Programación II");

        javax.swing.GroupLayout panelTecladoLayout = new javax.swing.GroupLayout(panelTeclado);
        panelTeclado.setLayout(panelTecladoLayout);
        panelTecladoLayout.setHorizontalGroup(
            panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTecladoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTecladoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelTecladoLayout.createSequentialGroup()
                        .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelTecladoLayout.createSequentialGroup()
                                    .addGap(76, 76, 76)
                                    .addComponent(ButtonNumber2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ButtonNumber3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelTecladoLayout.createSequentialGroup()
                                    .addComponent(ButtonDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ButtonDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ButtonMultiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ButtonLess, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelTecladoLayout.createSequentialGroup()
                                .addComponent(ButtonNumber0, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTecladoLayout.createSequentialGroup()
                                .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ButtonNumber7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonNumber4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ButtonNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelTecladoLayout.createSequentialGroup()
                                        .addComponent(ButtonNumber8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ButtonNumber9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelTecladoLayout.createSequentialGroup()
                                        .addComponent(ButtonNumber5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ButtonNumber6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ButtonMore, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelTecladoLayout.setVerticalGroup(
            panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTecladoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonMultiplication, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonLess, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelTecladoLayout.createSequentialGroup()
                        .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNumber2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNumber3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonNumber4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNumber5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNumber6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ButtonMore, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelTecladoLayout.createSequentialGroup()
                        .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonNumber7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNumber8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonNumber9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelTecladoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ButtonNumber0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ButtonIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        Menu.setBackground(new java.awt.Color(238, 238, 238));

        Opciones.setText("Opciones");

        NuevoItemMenu.setText("Nuevo");
        NuevoItemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoItemMenuActionPerformed(evt);
            }
        });
        Opciones.add(NuevoItemMenu);

        HistorialItemMenu.setText("Historial");
        HistorialItemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistorialItemMenuActionPerformed(evt);
            }
        });
        Opciones.add(HistorialItemMenu);

        Menu.add(Opciones);

        AyudaItemMenu.setText("Ayuda");
        AyudaItemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AyudaItemMenuActionPerformed(evt);
            }
        });

        ManualItemMenu.setText("Manual de usuario");
        ManualItemMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManualItemMenuActionPerformed(evt);
            }
        });
        AyudaItemMenu.add(ManualItemMenu);

        Menu.add(AyudaItemMenu);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pantallaOperacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pantallaValores, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pantallaOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pantallaValores, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteAllActionPerformed
        LimpiarValores();        
    }//GEN-LAST:event_ButtonDeleteAllActionPerformed

    private void ButtonLessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLessActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        OperacionAritmetica("-");
    }//GEN-LAST:event_ButtonLessActionPerformed

    private void ButtonIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonIgualActionPerformed
        CalcularResultado();
    }//GEN-LAST:event_ButtonIgualActionPerformed

    private void ButtonPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPointActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores(".");
    }//GEN-LAST:event_ButtonPointActionPerformed

    private void ButtonNumber8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber8ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("8");
    }//GEN-LAST:event_ButtonNumber8ActionPerformed

    private void ButtonNumber9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber9ActionPerformed
       // Enviamos el valor que utilizara el teclado de la calculadora
       escrituraTeclado = false;
        AsignarValores("9");
    }//GEN-LAST:event_ButtonNumber9ActionPerformed

    private void ButtonMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMoreActionPerformed
        // TODO add your handling code here:
        escrituraTeclado = false;
        OperacionAritmetica("+");
    }//GEN-LAST:event_ButtonMoreActionPerformed

    private void ButtonNumber6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber6ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("6");
    }//GEN-LAST:event_ButtonNumber6ActionPerformed

    private void ButtonNumber5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber5ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("5");
    }//GEN-LAST:event_ButtonNumber5ActionPerformed

    private void ButtonNumber0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber0ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("0");
    }//GEN-LAST:event_ButtonNumber0ActionPerformed

    private void ButtonNumber4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber4ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("4");
    }//GEN-LAST:event_ButtonNumber4ActionPerformed

    private void ButtonNumber7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber7ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("7");
    }//GEN-LAST:event_ButtonNumber7ActionPerformed

    private void ButtonNumber1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber1ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("1");
    }//GEN-LAST:event_ButtonNumber1ActionPerformed

    private void ButtonNumber2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber2ActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        AsignarValores("2");
    }//GEN-LAST:event_ButtonNumber2ActionPerformed

    private void ButtonNumber3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNumber3ActionPerformed
         // Enviamos el valor que utilizara el teclado de la calculadora
         escrituraTeclado = false;
        AsignarValores("3");
    }//GEN-LAST:event_ButtonNumber3ActionPerformed

    private void ButtonDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDivisionActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        OperacionAritmetica("/");
    }//GEN-LAST:event_ButtonDivisionActionPerformed

    private void ButtonMultiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMultiplicationActionPerformed
        // Enviamos el valor que utilizara el teclado de la calculadora
        escrituraTeclado = false;
        OperacionAritmetica("*");
        
    }//GEN-LAST:event_ButtonMultiplicationActionPerformed

    private void pantallaValoresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pantallaValoresKeyTyped
                   
        char valorTeclado = evt.getKeyChar();
        escrituraTeclado = true;
        if (valorTeclado == java.awt.event.KeyEvent.VK_ENTER) {
            CalcularResultado();
        }
        else if (valorTeclado == java.awt.event.KeyEvent.VK_BACK_SPACE) {
            operacion = operacion.substring(0, operacion.length() - 1);
            ejecutarBeep();
        }
        // Verifica si el carácter es un número o un signo aritmético permitido
        else if ((valorTeclado >= '0' && valorTeclado <= '9' || valorTeclado == '.')) {            
            AsignarValores(String.valueOf(valorTeclado));
            ejecutarBeep();
        }
        else if (valorTeclado == '+' || valorTeclado == '-' || valorTeclado == '*' || valorTeclado == '/'){
            OperacionAritmetica(String.valueOf(valorTeclado));
            ejecutarBeep();
        }
        // Consume el evento para evitar que caracteres no permitidos se procesen
        else {
            evt.consume();
        }
    }//GEN-LAST:event_pantallaValoresKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pantallaValores.requestFocusInWindow();
    }//GEN-LAST:event_formWindowOpened

    private void pantallaValoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pantallaValoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pantallaValoresActionPerformed

    private void HistorialItemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistorialItemMenuActionPerformed
        
            cargarBitacora();
            HistoricoFrame.setVisible(true);
            HistoricoFrame.setSize(310, 518);
            HistoricoFrame.setLocationRelativeTo(null);
    }//GEN-LAST:event_HistorialItemMenuActionPerformed

    private void NuevoItemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoItemMenuActionPerformed
        try {
            // Indicamos que se dio en nuevo y borramos operacion
            LimpiarValores();
            guardarBitacora("Nuevo");
        } catch (IOException ex) {
            Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_NuevoItemMenuActionPerformed

    private void AyudaItemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AyudaItemMenuActionPerformed

    }//GEN-LAST:event_AyudaItemMenuActionPerformed

    private void ManualItemMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManualItemMenuActionPerformed
         InputStream inputStream = Calculadora.class.getResourceAsStream("/Utils/manual.pdf");
        if (inputStream != null) {
        try {
            // Crear un archivo temporal
            File tempFile = File.createTempFile("manual", ".pdf");
            tempFile.deleteOnExit();  // Para eliminar el archivo cuando se cierre la aplicación
            
            // Escribir el contenido del InputStream en el archivo temporal
            try (FileOutputStream outputStream = new FileOutputStream(tempFile)) {
                byte[] buffer = new byte[1024];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
            }
            
            // Abrir el archivo temporal
            Desktop.getDesktop().open(tempFile);
        } catch (IOException ex) {
            Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                inputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
      }
    }//GEN-LAST:event_ManualItemMenuActionPerformed

    private void AsignarValores(String valor) {
        // Establecemos el focus en la pantalla en dado caso se precione un boton
        pantallaValores.requestFocusInWindow();
        // Validamos que la bandera no esté activa, para reiniciar el valor
        if (limpiarOperacion) {
            operacion = ""; // Limpiar la operación si la bandera está activada
            limpiarOperacion = false; // Resetear la bandera
            this.pantallaValores.setText(""); // limpiamos la pantalla
        }

        // Si el valor no es un punto, o es un punto pero no hay ya un punto en la operación, concatenar el valor
        if (!valor.equals(".") || (valor.equals(".") && !operacion.contains("."))) {
            operacion += valor;
        }

        // Establece el valor acumulado de la variable al label si la bandera de escritura no esta activa
        if(!escrituraTeclado){
            this.pantallaValores.setText(operacion);        
        }            
    }
    
    private void OperacionAritmetica(String signoOperacion) {
        if (limpiarOperacion) {
            // Si limpiarOperacion es true, solo actualizamos la operación aritmética
            operacionAritmetica = signoOperacion;
            this.pantallaOperacion.setText(primerValor + " " + signoOperacion);
        } else {
            // Si no, actualizamos primerValor y operacionAritmetica
            try {
                primerValor = Float.parseFloat(operacion);
            } catch (NumberFormatException e) {
                this.pantallaValores.setText("SYNTAX");
                limpiarOperacion = true;
                return;
            }
            operacionAritmetica = signoOperacion;
            this.pantallaOperacion.setText(operacion + " " + signoOperacion);
            // Activar la bandera para limpiar la operación en la siguiente entrada de número
            limpiarOperacion = true;
        }
    }
    
    private void CalcularResultado(){
        if (!limpiarOperacion) {
            realizarOperacion(operacion);
        } else {
            realizarOperacion(String.valueOf(ultimoValor));
        }
    }
    
    public void realizarOperacion(String operacion) {
    if (limpiarOperacion) {
        segundoValor = ultimoValor;
    } else {
        segundoValor = Float.parseFloat(operacion);
        ultimoValor = segundoValor;
    }

    float resultado = 0;
    boolean operacionValida = true;

    switch (operacionAritmetica) {
        case "+":
            resultado = primerValor + segundoValor;
            this.pantallaOperacion.setText(primerValor + " + " + segundoValor + " = ");
            break;
        case "-":
            resultado = primerValor - segundoValor;
            this.pantallaOperacion.setText(primerValor + " - " + segundoValor + " = ");
            break;
        case "*":
            resultado = primerValor * segundoValor;
            this.pantallaOperacion.setText(primerValor + " x " + segundoValor + " = ");
            break;
        case "/":
            if (segundoValor != 0) {
                resultado = primerValor / segundoValor;
                this.pantallaOperacion.setText(primerValor + " / " + segundoValor + " = ");
            } else {
                this.pantallaValores.setText("DIV 0");
                operacionValida = false;
                limpiarOperacion = true;
            }
            break;
        default:
            this.pantallaValores.setText("SYNTAX");
            operacionValida = false;
            limpiarOperacion = true;
            break;
    }

    if (operacionValida) {
        this.pantallaValores.setText(String.valueOf(resultado));
        primerValor = resultado;
        limpiarOperacion = true;
        try {
            guardarBitacora("");
        } catch (IOException ex) {
            Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
    private void ejecutarBeep(){
        try {
            // Cargar el archivo de audio
            URL audioFile = Calculadora.class.getResource("/Utils/beep.wav");

            try ( // Abrir el archivo de audio
                    
                AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile)) {
                Clip Sound = AudioSystem.getClip();
                Sound.open(audioStream);
                
                // Reproducir el archivo de audio
                Sound.start();
            }

        } catch (Exception e) {
            this.pantallaValores.setText(e.getMessage());
            limpiarOperacion = true;
        }
    }
    
    private void guardarBitacora(String TextoPersonalizado) throws IOException {
    
        FileWriter archivo = null;
        PrintWriter contenido = null;
        String fechaHora = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());

        try {
         // Define la ruta relativa a la carpeta 'bitacora'
        File directorio = new File("bitacora");
        
        // Verifica si el directorio existe; si no, lo crea
        if (!directorio.exists()) {
            directorio.mkdirs();
        }
        
        archivo = new FileWriter(new File(directorio, "CalculadoraBitacora.txt"), true);
        contenido = new PrintWriter(archivo);
        
        contenido.println(fechaHora);
        
        if(!"".equals(TextoPersonalizado)){
            contenido.println(TextoPersonalizado);
        }else {
            contenido.println(this.pantallaOperacion.getText());
            contenido.println(this.pantallaValores.getText());
        }

        contenido.println("-------------------------------");
        
    } catch (IOException e) {
        // Aquí puedes manejar el error, por ejemplo, imprimir un mensaje en la consola
        System.err.println("Error al escribir en el archivo: " + e.getMessage());
    } finally {
        // Asegúrate de cerrar ambos recursos
        if (contenido != null) {
            contenido.close();
        }
        if (archivo != null) {
            archivo.close();
        }
    }
    }
    
    public void cargarBitacora() {
        File archivo = new File("bitacora/CalculadoraBitacora.txt");

        if (archivo.exists()) {
            try (BufferedReader lector = new BufferedReader(new FileReader(archivo))) {
                StringBuilder contenido = new StringBuilder();
                String linea;
                while ((linea = lector.readLine()) != null) {
                    contenido.append(linea).append(System.lineSeparator());
                }
                // Establece el texto del JTextArea
                Bitacora.setText(contenido.toString());
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            Bitacora.setText("El archivo no existe.");
        }
    }
    
    private void LimpiarValores(){
        // Limpiamos las variables
        operacion = "";
        primerValor = 0;
        segundoValor = 0;
        
        // limpiamos las pantallas
        this.pantallaValores.setText("");
        this.pantallaOperacion.setText("");
        
        // establecemos el focus en la pantalla
        pantallaValores.requestFocusInWindow();        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {   
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true); 
                new Calculadora().setLocationRelativeTo(null);
                new Calculadora().pantallaValores.requestFocusInWindow();
            }
        });
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AyudaItemMenu;
    private javax.swing.JTextArea Bitacora;
    private javax.swing.JButton ButtonDeleteAll;
    private javax.swing.JButton ButtonDivision;
    private javax.swing.JButton ButtonIgual;
    private javax.swing.JButton ButtonLess;
    private javax.swing.JButton ButtonMore;
    private javax.swing.JButton ButtonMultiplication;
    private javax.swing.JButton ButtonNumber0;
    private javax.swing.JButton ButtonNumber1;
    private javax.swing.JButton ButtonNumber2;
    private javax.swing.JButton ButtonNumber3;
    private javax.swing.JButton ButtonNumber4;
    private javax.swing.JButton ButtonNumber5;
    private javax.swing.JButton ButtonNumber6;
    private javax.swing.JButton ButtonNumber7;
    private javax.swing.JButton ButtonNumber8;
    private javax.swing.JButton ButtonNumber9;
    private javax.swing.JButton ButtonPoint;
    private javax.swing.JMenuItem HistorialItemMenu;
    private javax.swing.JFrame HistoricoFrame;
    private javax.swing.JMenuItem ManualItemMenu;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenuItem NuevoItemMenu;
    private javax.swing.JMenu Opciones;
    private javax.swing.JPanel PanelHistorial;
    private javax.swing.JScrollPane ScrollHistorial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel panelTeclado;
    private javax.swing.JLabel pantallaOperacion;
    private javax.swing.JTextField pantallaValores;
    // End of variables declaration//GEN-END:variables
}
